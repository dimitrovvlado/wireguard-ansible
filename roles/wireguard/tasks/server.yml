# tasks/server.yml

- name: Setup WireGuard interface
  become: true
  block:
    - name: Ensure WireGuard system directory exists
      file:
        path: /etc/wireguard
        state: directory
        owner: root
        group: root
        mode: '0700'
    - name: Enrich peer definitions with public keys from remote host
      slurp:
        src: "/home/{{ vpn_user.name }}/conf/clients/{{ item.name | replace(' ', '_') }}/public.key"
      register: peer_public_keys
      loop: "{{ wireguard.peers }}"
      loop_control:
        label: "{{ item.name }}"
    - name: Build enriched peer list
      set_fact:
        wireguard_peers_with_keys: >-
          {{ (wireguard_peers_with_keys | default([])) +
             [ item.0 | combine({'public_key': (item.1.content | b64decode | trim)}) ] }}
      loop: "{{ wireguard.peers | zip(peer_public_keys.results) | list }}"
      loop_control:
        label: "{{ item.0.name }}"
    - name: Create WireGuard interface configuration
      template:
        src: wg0.conf.j2
        dest: "/etc/wireguard/{{ wireguard.interface | default('wg0') }}.conf"
        owner: root
        group: root
        mode: '0600'
    - name: Enable and start WireGuard service
      systemd:
        name: "wg-quick@{{ wireguard.interface | default('wg0') }}"
        enabled: yes
        state: started
    - name: Restart WireGuard
      become: yes
      systemd:
        name: "wg-quick@{{ wireguard.interface }}"
        state: restarted
